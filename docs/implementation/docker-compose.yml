version: '3.8'

services:
  # 古籍MCP服务器
  guji-mcp-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: guji-mcp-server
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - REDIS_URL=redis://redis:6379
      - SHIDIANGUJI_BASE_URL=https://www.shidianguji.com
      - CACHE_TTL=3600
      - MAX_CONCURRENT_REQUESTS=10
      - REQUEST_TIMEOUT=30000
      - LOG_LEVEL=info
    depends_on:
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - guji-network

  # Redis缓存服务
  redis:
    image: redis:7-alpine
    container_name: guji-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./config/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - guji-network

  # Prometheus监控
  prometheus:
    image: prom/prometheus:latest
    container_name: guji-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - guji-network

  # Grafana可视化
  grafana:
    image: grafana/grafana:latest
    container_name: guji-grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    depends_on:
      - prometheus
    networks:
      - guji-network

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: guji-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - guji-mcp-server
    restart: unless-stopped
    networks:
      - guji-network

volumes:
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  guji-network:
    driver: bridge
